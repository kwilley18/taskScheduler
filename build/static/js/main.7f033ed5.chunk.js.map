{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","className","reminder","onDoubleClick","id","name","Tasks","tasks","map","AddTask","useState","setText","day","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f033ed5.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n\n    return (\n        <button style={{backgroundColor: color}} onClick={onClick}>{text}</button>\n    )\n}\n\n\nButton.defaultProps = {\n    color: 'blue'\n}; \n\nButton.propTypes = {\n    text: PropTypes.string,\n    onClick: PropTypes.func.isRequired\n}; \nexport default Button\n","import React from 'react'\nimport Button from './Button'\nimport PropTypes from 'prop-types'\n\nconst Header = ({title, onAdd, showAdd}) => { // place props in function\n\n    \n    return (\n        <header>\n            <h1>{title}</h1>\n            <Button color={ showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/> \n        </header>\n    )\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n\n}\nexport default Header\n","import React from 'react'\nimport { FaTimes } from 'react-icons/fa'\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div className = {`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={()=>onToggle(task.id)}>\n            <h3>{task.name} \n                <FaTimes style={{color: \"red\"}} onClick={() => onDelete(task.id)} />\n            </h3>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n\n    return (\n        <div>\n            <h1>\n                {tasks.map( (task) => (\n                    <Task task={task} onDelete={onDelete} onToggle={onToggle} />\n                ))}\n            </h1>\n        </div>\n    )\n}\n\nexport default Tasks\n","import React from 'react'\nimport { useState } from 'react'\nconst AddTask = ({onAdd}) => {\n\n    const [text, setText] = useState(''); \n    const [day, setDay] = useState(''); \n    const [reminder, setReminder] = useState(false); \n\n    const onSubmit= (e) => {\n        e.preventDefault()\n\n        if(!text){\n            alert('please add a task')\n            return \n        }\n        onAdd({text, day, reminder})\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n    return (\n        <form className='add-task' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type=\"text\" placeholder='Add Task' value={text} onChange = {(e) => setText(e.target.value) }/> \n            </div>\n\n            <div className='form-control '>\n                <label>Day and Time </label>\n                <input type=\"text\" placeholder='Day and Time' value={day} onChange = {(e) => setDay(e.target.value) } /> \n            </div>\n\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type=\"checkbox\" placeholder='Add Task'  value={reminder} checked={reminder} onChange = {(e) => setReminder(e.currentTarget.checked)} /> \n            </div>\n\n            <input type=\"submit\" value='Save Task' className='btn btn-block' />\n        </form>\n\n    )\n}\n\nexport default AddTask\n","import './App.css';\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport {useState} from 'react'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false); \n  const [tasks, setTasks] = useState([\n    {\n        id: '1',\n        name: 'Appointment', \n        day: 'Feb 2, 2021',\n        reminder: true, \n    },\n    {\n        id: '2',\n        name: 'Appointment2', \n        day: 'Feb 11, 2021',\n        reminder: true, \n    },\n    {\n        id: '3',\n        name: 'Appointment3', \n        day: 'March 11, 2021',\n        reminder: true, \n  }\n])\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = { id, ...task}\n  setTasks([...tasks, newTask])\n //console.log(task); \n}\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\nconst toggleReminder = (id) => {\n  setTasks( tasks.map((task) => task.id === id  ? {...task, reminder: !task.reminder} : task ))\n}\n  return (\n    <div className=\"App\">\n      <Header title=\"Time Tracker\"  onAdd={()=> setShowAddTask(!showAddTask)} showAdd={showAddTask}/> \n      {showAddTask && <AddTask  onAdd={addTask}/>}\n      {tasks.length > 0 ?  <Tasks tasks = {tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No tasks'}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}